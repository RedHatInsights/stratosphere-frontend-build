{"version":3,"file":"js/271.61fc2c9b3a6e27bdc60d.js","mappings":"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","sources":["webpack:///./src/app/component/order-details/aws-details.js","webpack:///./src/app/component/order-details/azure-details.js","webpack:///./src/app/component/order-details/partner-order-details.js","webpack:///./src/app/component/stratosphere-error-paths/get-stratosphere-error-paths.js","webpack:///./src/app/component/review-link/terms-form-group.js","webpack:///./src/app/component/bff-service/bff-service.js","webpack:///./src/app/component/review-link/review-link-account.js","webpack:///./src/app/component/stratosphere-notifications/stratosphere-notification.js","webpack:///./src/app/component/stratosphere-notifications/error-notification.js","webpack:///./src/app/component/stratosphere-app/stratosphere-app.js","webpack:///./src/app/component/shared/toast-notifications/toast-notifications.js","webpack:///./src/app/component/shared/footer/footer.js","webpack:///./src/App.js","webpack:///./src/locales/partner_aws/en.js","webpack:///./src/locales/partner_azure/en.js","webpack:///./src/locales/en/common.js","webpack:///./src/i18n.js","webpack:///./src/app/component/shared/constants.js","webpack:///./src/serviceWorker.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nfunction AwsDetails(orderDetails, local) {\n  return {\n    getRows() {\n      return [\n        {\n          label: local('review-order.customer_info.customer_number'),\n          value: orderDetails?.customerAccountId ?? '-',\n        },\n      ];\n    },\n  };\n}\n\nAwsDetails.propTypes = {\n  orderDetails: PropTypes.object.isRequired,\n  local: PropTypes.func.isRequired,\n};\n\nexport default AwsDetails;\n","import PropTypes from 'prop-types';\n\nfunction AzureDetails(orderDetails, local) {\n  return {\n    getRows() {\n      return [\n        {\n          label: local('review-order.customer_info.customer_number'),\n          value: orderDetails?.azureCustomerId ?? '-',\n        },\n      ];\n    },\n  };\n}\n\nAzureDetails.propTypes = {\n  orderDetails: PropTypes.object.isRequired,\n  local: PropTypes.func.isRequired,\n};\n\nexport default AzureDetails;\n","import PropTypes from 'prop-types';\nimport AwsDetails from './aws-details';\nimport AzureDetails from './azure-details';\n\nfunction PartnerOrderDetails(partnerId, orderDetails, local) {\n  switch (partnerId) {\n    case 'aws':\n      return new AwsDetails(orderDetails, local);\n    case 'azure':\n      return new AzureDetails(orderDetails, local);\n    default:\n      throw new Error(`Unknown partner: ${partnerId}`);\n  }\n}\n\nPartnerOrderDetails.propTypes = {\n  partnerId: PropTypes.string.isRequired,\n  orderDetails: PropTypes.object,\n  local: PropTypes.func.isRequired,\n};\n\nexport default PartnerOrderDetails;\n","export default function getStratosphereErrorPaths(partnerId) {\n  return {\n    error: () => `/${partnerId}/error`,\n    orderError: () => `/${partnerId}/order-error`,\n    exportError: () => `/${partnerId}/export-error`,\n    systemError: () => `/${partnerId}/system-error`,\n    alreadyLinked: () => `/${partnerId}/already-linked`,\n    tokenError: () => `/${partnerId}/token-error`,\n    unauthorized: () => '/unauthorized',\n    needAssistance: () => `/${partnerId}/need-assistance`,\n  };\n}\n","import { Button, Checkbox, FormGroup, FormSelect, FormSelectOption } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport langList from '../../../locales/language.json';\n\nfunction TermsFormGroup(props) {\n  const { local, onAgreeToTerms, onSelectTermsId, terms } = props;\n  const downloadURLs = terms[0]?.translations;\n\n  const [selectedLanguage, setSelectedLanguage] = useState(getDefaultLanguage());\n  const [selectedTerms, setSelectedTerms] = useState(getDefaultTerms(terms));\n  const [isAgreedToTerms, setIsAgreedToTerms] = useState(false);\n\n  const findTermsForLanguage = (languageCode) => {\n    return downloadURLs.find((downloadURL) => downloadURL.localeCode === languageCode);\n  };\n  const handleSelectLanguage = (languageCode) => {\n    let matchingLanguage = langList.find((lang) => lang.code === languageCode);\n    setSelectedLanguage(matchingLanguage);\n\n    let matchingTerms = findTermsForLanguage(languageCode);\n    setSelectedTerms(matchingTerms);\n    onSelectTermsId(matchingTerms.id);\n  };\n  const handleAgreeCheckbox = (checked) => {\n    setIsAgreedToTerms(checked);\n    onAgreeToTerms(checked);\n  };\n  const downloadTerms = () => {\n    window.open(selectedTerms.downloadUrl, '_blank');\n  };\n\n  return (\n    <>\n      <FormGroup label=\"Terms and conditions *\">\n        <FormSelect\n          value={selectedLanguage.code}\n          onChange={handleSelectLanguage}\n          aria-label=\"FormSelect Input\"\n          className={'pf-c-form-select-control'}\n        >\n          {langList.map((lang, index) => (\n            <FormSelectOption key={index} value={lang.code} label={lang.nativeName} />\n          ))}\n        </FormSelect>\n        <Checkbox\n          id=\"agree-check\"\n          isChecked={isAgreedToTerms}\n          className=\"pf-u-mt-md\"\n          label={\n            <>\n              {local('link-account.terms')}\n              <Button variant=\"link\" isInline onClick={downloadTerms}>\n                {local('link-account.conditions')}\n                &nbsp;\n                <ExternalLinkAltIcon />\n              </Button>\n            </>\n          }\n          onChange={handleAgreeCheckbox}\n          aria-label=\"terms checkbox\"\n        />\n      </FormGroup>\n    </>\n  );\n}\n\nfunction getDefaultLanguage() {\n  return langList.find((lang) => lang.code === 'en_US') || langList?.[0] || null;\n}\n\nfunction getDefaultTerms(terms) {\n  let defaultLanguage = getDefaultLanguage();\n  let translations = terms?.[0]?.translations;\n  return translations?.find((translation) => translation.localeCode === defaultLanguage.code);\n}\n\nTermsFormGroup.propTypes = {\n  local: PropTypes.func.isRequired,\n  onAgreeToTerms: PropTypes.func.isRequired,\n  onSelectTermsId: PropTypes.func.isRequired,\n  terms: PropTypes.array.isRequired,\n};\n\nexport { TermsFormGroup, getDefaultTerms };\n","import axios from 'axios';\n\nconst getApiUrl = () => {\n  const { apiUrl } = window['runConfig'] || {\n    apiUrl: 'https://access.stage.redhat.com/subscriptions/link/api/',\n  };\n  return apiUrl;\n};\n\nconst getPartnerOrderDetailsAsync = async (partnerId, signal) => {\n  return insights.chrome.auth.getToken().then((token) => {\n    return axios.get(getApiUrl() + `${partnerId}/details`, {\n      headers: { Authorization: `Bearer ${token}` },\n      withCredentials: true, // required to supply cookies on cross-site requests\n      signal: signal,\n    });\n  });\n};\n\nconst linkPartnerOrderToAccountAsync = async (partnerId, termsPdfId) => {\n  console.debug(`Linking partner=${partnerId}, terms=${termsPdfId}`);\n\n  return insights.chrome.auth.getToken().then((token) => {\n    return axios\n      .post(\n        getApiUrl() + `${partnerId}/link`,\n        {},\n        {\n          headers: { Authorization: `Bearer ${token}` },\n          params: {\n            termsPdfId: termsPdfId,\n            linkAllOrders: true, // no longer optional\n          },\n          withCredentials: true, // required to supply cookies on cross-site requests\n        }\n      )\n      .then((res) => res?.data?.linkSuccessful);\n  });\n};\n\nexport { getPartnerOrderDetailsAsync, linkPartnerOrderToAccountAsync };\n","import {\n  ActionGroup,\n  Button,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  Form,\n  PageSection,\n  Spinner,\n  Title,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PartnerOrderDetails from '../order-details/partner-order-details';\nimport getStratosphereErrorPaths from '../stratosphere-error-paths/get-stratosphere-error-paths';\nimport { getDefaultTerms, TermsFormGroup } from './terms-form-group';\n\n// fake for local testing by changing this import to \"...from '../bff-service/bff-service-fake'\"\nimport { getPartnerOrderDetailsAsync, linkPartnerOrderToAccountAsync } from '../bff-service/bff-service';\n\nclass ReviewLinkAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mergedResponse: null,\n      redirect: null,\n      // form contents\n      isAgree: false,\n      termsPdfId: null,\n      // concurrent request control\n      submitting: false,\n      fetchingResponse: false,\n    };\n\n    this.abortController = new AbortController();\n  }\n\n  render() {\n    const { redirect, mergedResponse } = this.state;\n\n    if (redirect) {\n      console.debug('Redirecting to: ', redirect);\n      return <Redirect to={redirect} />;\n    }\n    if (!mergedResponse) {\n      return <Spinner size=\"xl\" aria-label=\"Waiting on order content to load\" />;\n    }\n\n    const { redHatAccountDetails, marketplaceDetails, vendorOfferings, terms } = mergedResponse;\n    const { partnerId, local } = this.props;\n    const { isAgree, submitting } = this.state;\n\n    return (\n      <>\n        <PageSection isFilled={true} variant=\"light\" className=\"pf-u-p-2xl\">\n          {/* TODO update to use localization */}\n          <Title headingLevel=\"h1\" className=\"pf-u-pb-xl\">\n            Complete your account connection\n          </Title>\n          <DescriptionList\n            isHorizontal\n            horizontalTermWidthModifier={{\n              default: '12ch',\n              sm: '17ch',\n              md: '17ch',\n              lg: '17ch',\n              xl: '17ch',\n              '2xl': '17ch',\n            }}\n            className=\"pf-u-pb-2xl\"\n          >\n            <DescriptionListGroup>\n              <DescriptionListTerm>{this.props.local('review-link-account.accountNumberLabel')}</DescriptionListTerm>\n              <DescriptionListDescription>\n                {redHatAccountDetails.accountNumber\n                  ? redHatAccountDetails.accountNumber\n                  : this.props.local('review-link-account.defaultRedHatAccountNumber')}\n              </DescriptionListDescription>\n            </DescriptionListGroup>\n            {new PartnerOrderDetails(partnerId, marketplaceDetails, local).getRows().map((row, i) => (\n              <DescriptionListGroup key={i}>\n                <DescriptionListTerm>{row.label}</DescriptionListTerm>\n                <DescriptionListDescription>{row.value}</DescriptionListDescription>\n              </DescriptionListGroup>\n            ))}\n            <DescriptionListGroup>\n              <DescriptionListTerm>{this.props.local('review-link-account.subscriptionLabel')}</DescriptionListTerm>\n              <DescriptionListDescription>{vendorOfferings?.[0]?.description}</DescriptionListDescription>\n            </DescriptionListGroup>\n          </DescriptionList>\n          <Form>\n            {/* Embedded component for handling terms */}\n            <TermsFormGroup\n              local={local}\n              terms={terms}\n              onAgreeToTerms={(agree) => this.setIsAgree(agree)}\n              onSelectTermsId={(id) => this.setTermsPdfId(id)}\n            />\n            <ActionGroup>\n              <Button variant=\"primary\" type=\"button\" isDisabled={!isAgree || submitting} onClick={() => this.linkAccounts()}>\n                {this.props.local('review-link-account.connectAccountButtonLabel')}\n              </Button>\n              <Button variant=\"link\" href=\"/\" component=\"a\" style={{ paddingTop: '6px' }}>\n                {this.props.local('review-link-account.cancelButtonLabel')}\n              </Button>\n            </ActionGroup>\n          </Form>\n        </PageSection>\n      </>\n    );\n  }\n\n  setMergedResponse(mergedResponse) {\n    this.setState({ mergedResponse: mergedResponse });\n  }\n\n  setRedirect(redirect) {\n    this.setState({ redirect: redirect });\n  }\n\n  setIsAgree(isAgree) {\n    this.setState({ isAgree: isAgree });\n  }\n\n  setTermsPdfId(termsPdfId) {\n    this.setState({ termsPdfId: termsPdfId });\n  }\n\n  setSubmitting(submitting) {\n    this.setState({ submitting: submitting });\n  }\n\n  setFetchingResponse(fetchingResponse) {\n    this.setState({ fetchingResponse: fetchingResponse });\n  }\n\n  fetchMergedResponse() {\n    if (this.state.mergedResponse === null && !this.state.fetchingResponse) {\n      console.debug('Starting to fetch entitlement details.');\n\n      this.setFetchingResponse(true);\n      getPartnerOrderDetailsAsync(this.props.partnerId, this.abortController.signal)\n        .then((res) => {\n          console.debug('Fetched merged response: ', JSON.stringify(res.data));\n\n          // If it's a 200 response but the body says the request wasn't successful\n          // call the error callback and make it look like an axios error, for compatibility\n          if (typeof res?.data?.successful === 'boolean' && !res.data.successful) {\n            this.errorCallback({ response: res });\n          } else {\n            this.initializeMergedResponse(res.data);\n          }\n        })\n        .catch((error) => {\n          this.errorCallback(error);\n        })\n        .finally(() => this.setFetchingResponse(false));\n    }\n  }\n\n  initializeMergedResponse(data) {\n    if (data.linkedRedHatAccountId) {\n      insights.chrome.auth.getUser().then((user) => {\n        if (user.identity.org_id === data.linkedRedHatAccountId) {\n          this.sendToLandingPage(data);\n        } else {\n          this.setRedirect(this.errorPaths().alreadyLinked());\n        }\n      });\n    }\n\n    this.setMergedResponse(data);\n    this.setTermsPdfId(getDefaultTerms(data.terms).id);\n  }\n\n  componentDidMount() {\n    // start fetching when rendered\n    console.debug('Starting to fetch order details');\n    this.fetchMergedResponse();\n  }\n\n  componentWillUnmount() {\n    console.debug('Cancelling ongoing requests...');\n    this.abortController.abort();\n  }\n\n  linkAccounts() {\n    if (!this.state.submitting) {\n      const { partnerId } = this.props;\n      const { termsPdfId } = this.state;\n\n      this.setSubmitting(true);\n\n      linkPartnerOrderToAccountAsync(partnerId, termsPdfId)\n        .then((res) => this.onLinkSuccess(res))\n        .catch((err) => this.errorCallback(err))\n        .finally(() => this.setSubmitting(false));\n    }\n  }\n\n  onLinkSuccess(success) {\n    if (success) {\n      // show success then redirect\n      this.props.useToast({\n        key: 'confirm-link',\n        message: this.props.local(`${this.props.partnerId}:toast-notification.confirm-link.success`),\n        type: 'success',\n      });\n\n      this.sendToLandingPage(this.state?.mergedResponse);\n    } else {\n      this.setRedirect(this.errorPaths().error());\n    }\n  }\n\n  sendToLandingPage(data) {\n    let vendorOfferings = data?.vendorOfferings;\n    let landingPage = vendorOfferings?.[0]?.landingPage || window['runConfig']['hrefConfig'];\n\n    console.debug('Sending to ' + landingPage);\n    window.location.assign(landingPage);\n  }\n\n  errorPaths() {\n    return getStratosphereErrorPaths(this.props.partnerId);\n  }\n\n  errorCallback(error) {\n    const errorPaths = this.errorPaths();\n    console.debug('Encountered error on call: ', JSON.stringify(error));\n\n    if (error.reason === 'AbortError' || error.message === 'canceled') {\n      // do not redirect if aborted\n      return;\n    }\n\n    if (error?.response?.status === 401) {\n      this.setRedirect(errorPaths.unauthorized());\n    }\n\n    switch (error?.response?.data?.reason) {\n      case 'terms_error':\n        this.setRedirect(errorPaths.error());\n        break;\n      case 'export_compliance_failure':\n        this.setRedirect(errorPaths.exportError());\n        break;\n      case 'linked_different_account': // fall-through\n      case 'linked_same_account':\n        this.setRedirect(errorPaths.orderError());\n        break;\n      case 'missing_seller':\n      case 'missing_token':\n      case 'invalid_token':\n      case 'expired_token':\n        this.setRedirect(errorPaths.tokenError());\n        break;\n      default:\n        this.setRedirect(errorPaths.systemError());\n    }\n  }\n}\n\nReviewLinkAccount.propTypes = {\n  partnerId: PropTypes.string.isRequired,\n  local: PropTypes.func.isRequired,\n  useToast: PropTypes.func.isRequired,\n};\n\nexport default ReviewLinkAccount;\n","import React from 'react';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\nimport 'react-responsive-modal/styles.css';\nimport './stratosphere-notifications.scss';\nimport { Trans } from 'react-i18next';\n\nfunction StratosphereNotification(props) {\n  const { local } = props;\n\n  return (\n    <>\n      <Card id=\"notification-card\">\n        {/* https://reactjs.org/docs/conditional-rendering.html#inline-if-with-logical--operator */}\n        {props.headerKey && <CardTitle>{local(props.headerKey)}</CardTitle>}\n        {props.bodyKey && <CardBody>{local(props.bodyKey)}</CardBody>}\n        {props.footerKey && (\n          <CardFooter>\n            {/* See https://react.i18next.com/latest/trans-component */}\n            {/* <1> in locale file: support link, must supply a href attribute */}\n            <Trans t={local} i18nKey={props.footerKey}>\n              Please return to your <a target=\"blank\">marketplace console</a>\n            </Trans>\n          </CardFooter>\n        )}\n      </Card>\n    </>\n  );\n}\n\nexport default StratosphereNotification;\n","import React from 'react';\n\nimport '@patternfly/react-core/dist/styles/base.css';\nimport 'react-responsive-modal/styles.css';\nimport './stratosphere-notifications.scss';\nimport StratosphereNotification from './stratosphere-notification';\n\nfunction ErrorNotification(props) {\n  return (\n    <StratosphereNotification\n      headerKey={`${props.type}.header`}\n      bodyKey={`${props.type}.body`}\n      footerKey={`${props.type}.footer`}\n      local={props.local}\n      {...props} // to inject dependencies\n    />\n  );\n}\n\nexport default ErrorNotification;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReviewLinkAccount from '../review-link/review-link-account';\nimport { Route, Switch } from 'react-router-dom';\nimport ErrorNotification from '../stratosphere-notifications/error-notification';\nimport getStratosphereErrorPaths from '../stratosphere-error-paths/get-stratosphere-error-paths';\n\nclass StratosphereApp extends React.Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    useToast: PropTypes.func.isRequired,\n    local: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  getPartnerId() {\n    return this.props.match.params.partnerId;\n  }\n\n  render() {\n    const partnerId = this.getPartnerId();\n    const { local, useToast } = this.props;\n\n    // create a version of the i18next \"t\" function named local that\n    // includes the partnerId as the namespace within the options\n    const localWithPartner = (key, options) =>\n      local(key, {\n        ...options,\n        ns: partnerId,\n      });\n\n    const errorPaths = getStratosphereErrorPaths(partnerId);\n\n    return (\n      <Switch>\n        <Route exact path={'/' + partnerId}>\n          <ReviewLinkAccount partnerId={partnerId} local={localWithPartner} useToast={useToast} />;\n        </Route>\n        <Route path={errorPaths.alreadyLinked()}>\n          <ErrorNotification local={localWithPartner} type=\"already-linked\" />\n        </Route>\n        <Route path={errorPaths.tokenError()}>\n          <ErrorNotification local={localWithPartner} type=\"token-error\" />\n        </Route>\n        <Route path={errorPaths.exportError()}>\n          <ErrorNotification local={localWithPartner} type=\"export-error\" />\n        </Route>\n        <Route path={[errorPaths.error(), errorPaths.orderError(), errorPaths.systemError()]}>\n          <ErrorNotification local={localWithPartner} type=\"general-error\" />\n        </Route>\n        <Route path={errorPaths.needAssistance()}>\n          <ErrorNotification local={localWithPartner} type=\"need-assistance\" />\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nexport default StratosphereApp;\n","import React from 'react';\nimport './toast-notifications.scss';\n\nclass ToastNotification extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      notifObject: []\n    };\n  }\n\n  setNotification(val) {\n    var notifications = this.state.notifObject.concat({\n      key: val.key,\n      message: val.message,\n      type: val.type\n    });\n    this.setState({ notifObject: notifications})\n    setTimeout(() => {\n      if (this.state.notifObject) {\n        let notification_obj = this.state.notifObject.filter(\n          (item) => item.key !== val.key\n        );\n        this.setState({ notifObject: notification_obj });\n      }\n    }, 5000);\n  }\n\n  componentDidUpdate(prevProps) {\n    let data = this.props.toastData;\n    let lastData = prevProps.toastData;\n    if (data.key && data.key != lastData.key) {\n      this.setNotification(data);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.notifObject.length > 0 && (\n          <ul className='pf-c-alert-group pf-m-toast'>\n            {this.state.notifObject.map((t) => (\n              <li className='pf-c-alert-group__item' key={'toast-' + t.key}>\n                <div className={'pf-c-alert pf-m-' + t.type}>\n                  <div className='pf-c-alert__icon'>\n                    {t.type === 'success' && (\n                      <i className='fas fa-check-circle' aria-hidden='true'></i>\n                    )}\n                    {t.type === 'danger' && (\n                      <i className='fas fa-info-circle' aria-hidden='true'></i>\n                    )}\n                    {t.type === 'info' && (\n                      <i className='fas fa-info-circle' aria-hidden='true'></i>\n                    )}\n                  </div>\n                  <h4 className='pf-c-alert__title'>\n                    <div className='pf-c-alert__description'>\n                      <p>{t.message}</p>\n                    </div>\n                  </h4>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ToastNotification;\n","import React from 'react';\nimport './footer.scss';\nimport { Brand, Split, SplitItem, PageSection } from '@patternfly/react-core';\nimport imgBrand from '../../../../assets/red_hat_logo.svg';\n\nclass FooterComponent extends React.Component {\n  render() {\n    const { local } = this.props;\n    return (\n      <PageSection className=\"footer-container pf-m-limit-width\">\n        <Split className=\"footer-body\">\n          <SplitItem className=\"footer-content\">\n            <Brand src={imgBrand} className=\"footer-logo\" alt=\"Patternfly Logo\" />\n          </SplitItem>\n          <SplitItem isFilled className=\"footer-content\">\n            Copyright &copy; 2022 Red Hat, Inc.\n          </SplitItem>\n          <SplitItem className=\"footer-content policy-content\">\n            <span\n              className=\"custom-links\"\n              dangerouslySetInnerHTML={{\n                __html: local(`app-layout.privacy`),\n              }}\n            ></span>\n            |&nbsp;\n            <span\n              className=\"custom-links\"\n              dangerouslySetInnerHTML={{\n                __html: local(`app-layout.terms`),\n              }}\n            ></span>\n            |&nbsp;\n            <span\n              className=\"custom-links\"\n              dangerouslySetInnerHTML={{\n                __html: local(`app-layout.policy`),\n              }}\n            ></span>\n          </SplitItem>\n        </Split>\n      </PageSection>\n    );\n  }\n}\n\nexport default FooterComponent;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\n\nimport StratosphereApp from '../src/app/component/stratosphere-app/stratosphere-app';\nimport ToastNotification from './app/component/shared/toast-notifications/toast-notifications';\nimport getStratosphereErrorPaths from './app/component/stratosphere-error-paths/get-stratosphere-error-paths';\nimport Footer from './app/component/shared/footer/footer';\n\nimport '@patternfly/react-core/dist/styles/base.css';\nimport '@patternfly/patternfly/patternfly.css';\nimport './App.scss';\nimport ErrorNotification from './app/component/stratosphere-notifications/error-notification';\nimport PropTypes from 'prop-types';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); //this.props.t are default props provide by package i18n\n    this.state = {\n      newToast: {},\n      userDetails: {},\n    };\n    this.toast = (data) => {\n      this.setState({ newToast: data });\n    };\n    this.setUserDetails = (data) => {\n      this.setState({ userDetails: data });\n    };\n  }\n\n  componentDidMount() {\n    insights.chrome.init();\n    insights.chrome.identifyApp('connect');\n\n    window.history.pushState(null, null, window.location.href);\n    window.onpopstate = function () {\n      window.history.go(1);\n    };\n  }\n\n  componentWillUnmount() {\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) => history.push(`/${event.navId}`));\n    return () => {\n      unregister();\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ToastNotification toastData={this.state.newToast} />\n        <Switch>\n          <Route exact path=\"/\">\n            <ErrorNotification local={this.props.t} type=\"default-error\" />\n          </Route>\n          <Route\n            path=\"/:partnerId\"\n            // must render this way so the `partnerId` match can be injected via props\n            render={(props) => (\n              <StratosphereApp\n                local={this.props.t}\n                i18n={this.props.i18n}\n                useToast={this.toast}\n                setUserDetails={this.setUserDetails}\n                getErrorPaths={getStratosphereErrorPaths}\n                {...props}\n              />\n            )}\n          />\n        </Switch>\n        <Footer local={this.props.t} />\n      </React.Fragment>\n    );\n  }\n\n  static get propTypes() {\n    return {\n      i18n: PropTypes.any,\n      t: PropTypes.func,\n    };\n  }\n}\n\nexport const AppWithTranslation = withTranslation()(App);\n","const { hrefConfig, hrefEnv } = window[\"runConfig\"] || {\n  hrefConfig: \"https://access.redhat.com/\",\n  hrefEnv: \"\",\n};\nexport default {\n  _comment: \"English\",\n  locale: \"en_us\",\n  \"general-error\": {\n    body: \"An unexpected issue has occurred with your AWS Marketplace order. Please go back to AWS Marketplace and restart the configuration process for your product.\",\n  },\n  \"already-linked\": {\n    body: \"Your AWS order has already been linked.\",\n    footer: \"Please return to the <1 href=\\\"https://console.aws.amazon.com\\\">AWS console</1> to get started!\",\n  },\n  \"token-error\": {\n    body: \"The onboarding process for your AWS Marketplace product has timed out. Please go back to AWS Marketplace and restart the configuration process for your product.\",\n  },\n  \"unauthorized\": {\n    body: \"Please return to AWS Marketplace and restart the linking process.\",\n  },\n  \"review-order\": {\n    headline: \"Link your AWS and Red Hat Accounts\",\n    customer_info: {\n      title: \"AWS Customer information\",\n      customer_number: \"AWS account ID\",\n      customer_identifier: \"Customer Identifier\",\n    }\n  },\n  \"toast-notification\": {\n    \"confirm-link\": {\n      \"success\":\n        \"Success! Your Red Hat account is now linked with your AWS Order.\",\n    },\n  },\n};\n","const { hrefConfig, hrefEnv } = window['runConfig'] || {\n  hrefConfig: 'https://access.redhat.com/',\n  hrefEnv: '',\n};\nexport default {\n  _comment: 'English',\n  locale: 'en_us',\n  'general-error': {\n    body: 'An unexpected issue has occurred with your Azure Marketplace order. Please go back to Azure Marketplace and restart the configuration process for your product.',\n  },\n  'already-linked': {\n    body: 'Your Azure order has already been linked.',\n    // TODO update URL\n    footer: 'Please return to the <1 href=\"https://portal.azure.com\">Azure console</1> to get started!',\n  },\n  \"token-error\": {\n    body: \"The onboarding process for your Azure Marketplace product has timed out. Please go back to Azure Marketplace and restart the configuration process for your product.\",\n  },\n  unauthorized: {\n    body: 'Please return to the Azure Marketplace and restart the linking process.',\n  },\n  'review-order': {\n    headline: 'Link your Azure and Red Hat Accounts',\n    // TODO Lorem ipsum?\n    customer_info: {\n      title: 'Azure Customer information',\n      customer_number: 'Account Id',\n      customer_identifier: 'Customer Identifier',\n    }\n  },\n  'toast-notification': {\n    'confirm-link': {\n      success: 'Success! Your Red Hat account is now linked with your Azure Order.',\n    },\n  },\n};\n","const { hrefConfig, hrefEnv } = window[\"runConfig\"] || {\n  hrefConfig: \"https://access.redhat.com/\",\n  hrefEnv: \"\",\n};\nexport default {\n  _comment: \"English\",\n  locale: \"en_us\",\n  'general-error': {\n    header: 'An issue has occurred',\n    body: 'An unexpected issue has occurred with your Marketplace order. Please go back to the Marketplace and restart the configuration process for your product.',\n    footer: 'If the issue persists, please contact <1 href=\"https://access.redhat.com/\">Red Hat customer support</1>.',\n  },\n  \"export-error\": {\n    header: \"Request cannot be processed at this time\",\n    body: \"Your account is on hold for further review by our Export Compliance Team. Once the hold is resolved, we’ll be in touch. We make every effort to resolve export holds as quickly as possible. Export holds are reviewed and resolved Monday through Friday from 08:00 – 17:00 Eastern Time.\",\n    footer: \"<1 href=\\\"https://access.redhat.com/articles/1340183\\\">Why is my account on Export Hold?</1>\",\n  },\n\n  \"default-error\": {\n      header: \"An issue has occurred.\",\n      body:\n        \"Please go back and try again.\",\n      footer: \"Please restart the linking process.\",\n    },\n  \"already-linked\": {\n    header: \"Already linked\",\n    body:\n      \"Your order has already been linked.\",\n    footer: \"Go Back\",\n  },\n  \"token-error\": {\n    header: \"An issue has occurred\",\n    body: \"The onboarding process for your Marketplace product has timed out. Please go back to Marketplace and restart the configuration process for your product.\",\n    footer: \"If the issue persists, please contact <1 href=\\\"https://access.redhat.com/\\\">Red Hat customer support</1>.\"\n  },\n  \"unauthorized\": {\n    header: \"Your Red Hat session has expired\",\n    body:\n      \"Please return to Marketplace and restart the linking process.\",\n  },\n  \"app-layout\": {\n    review: \"Review order summary\",\n    link: \"Link your Red Hat Account\",\n    learn: \"Learn More\",\n    privacy:\n      \"<a href='https://www.redhat.com/en/about/privacy-policy' target='blank'>Privacy statement </a>\",\n    terms:\n      \"<a href='https://www.redhat.com/en/about/terms-use' target='blank'>Terms of use </a>\",\n    policy:\n      \"<a href='https://www.redhat.com/en/about/all-policies-guidelines' target='blank'>All policies and guidelines </a>\",\n    landing: \"Welcome to Red Hat Partner Link Portal\",\n  },\n  \"need-assistance\": {\n    header: \"Need assistance?\",\n    \"a-body\":\n      \"For inquiries related to your account linking, contact RedHat Customer Support.\",\n    \"b-body\": `Check out this <a href='${hrefConfig}articles/5024951' target='blank'>FAQ</a> article in the Red Hat Customer Portal for more information about how Red Hat supports Cloud Account Linking`,\n    footer: \"Contact RedHat Support\",\n  },\n  'review-link-account': {\n    defaultRedHatAccountNumber: \"Creation of new account number pending\",\n    accountNumberLabel: \"Red Hat account number\",\n    subscriptionLabel: \"Subscription(s)\",\n    connectAccountButtonLabel: \"Connect accounts\",\n    cancelButtonLabel: \"Cancel\"\n  },\n  \"link-account\": {\n    header: \"Link your Red Hat account\",\n    description:\n        \"Review your Red Hat account details below. If the information is not correct and you need help, contact Red Hat Customer Support.\",\n    link_accounts: {\n      title: \"Auto-link opt-in\",\n      required_fields: \"*Required fields\",\n      checkbox_label: \"Automatically link your future purchases of Red Hat products from the Marketplace to your Red Hat Account.\",\n    },\n    enterprise_agreement: {\n      title: \"Enterprise agreement\",\n      description:\n          \"To read the Red Hat Enterprise Agreement document (PDF), select your preferred language and location from the dropdown menu.\",\n      download: \"Download\",\n      helper_text: \"Change agreement's location and language\",\n    },\n    enterprise_agreement_default_lang: {\n      name: \"United States (English)\",\n    },\n    terms: \"I have read and agreed to the \",\n    conditions: \"terms and conditions.\",\n    button: {\n      confirm: \"Confirm\",\n      back: \"Back\",\n      cancel: \"Cancel\",\n    }\n  }\n};","import i18n from 'i18next';\n\nimport * as partner_aws from './locales/partner_aws/index';\nimport * as partner_azure from './locales/partner_azure/index';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport detector from 'i18next-browser-languagedetector';\nimport commonTranslationEN from './locales/en/common.js';\nimport constants from './app/component/shared/constants.js';\n\nconst resources = {\n  en: {\n    aws: partner_aws.translationAWSEN,\n    azure: partner_azure.translationAzureEN,\n    common: commonTranslationEN,\n  },\n};\ni18n\n  .use(detector)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: 'en',\n    order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n    resources,\n    debug: false,\n    languages: ['en'],\n    react: {\n      useSuspense: false,\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n\n    ns: constants.namespaces,\n\n    fallbackNS: 'common',\n  });\n\nexport default i18n;\n","export default {\n  namespaces: ['aws', 'ibm-dsw', 'common', 'azure'],\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n"],"names":["AwsDetails","orderDetails","local","getRows","label","value","customerAccountId","propTypes","PropTypes","AzureDetails","azureCustomerId","PartnerOrderDetails","partnerId","Error","getStratosphereErrorPaths","error","orderError","exportError","systemError","alreadyLinked","tokenError","unauthorized","needAssistance","TermsFormGroup","props","onAgreeToTerms","onSelectTermsId","terms","downloadURLs","translations","selectedLanguage","setSelectedLanguage","useState","getDefaultLanguage","selectedTerms","setSelectedTerms","getDefaultTerms","isAgreedToTerms","setIsAgreedToTerms","FormGroup","FormSelect","code","onChange","languageCode","matchingLanguage","langList","lang","matchingTerms","find","downloadURL","localeCode","findTermsForLanguage","id","className","index","FormSelectOption","key","nativeName","Checkbox","isChecked","Button","variant","isInline","onClick","window","open","downloadUrl","checked","defaultLanguage","translation","getApiUrl","apiUrl","ReviewLinkAccount","React","constructor","super","this","state","mergedResponse","redirect","isAgree","termsPdfId","submitting","fetchingResponse","abortController","AbortController","render","console","debug","Redirect","to","Spinner","size","redHatAccountDetails","marketplaceDetails","vendorOfferings","PageSection","isFilled","Title","headingLevel","DescriptionList","isHorizontal","horizontalTermWidthModifier","default","sm","md","lg","xl","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","accountNumber","map","row","i","description","Form","agree","setIsAgree","setTermsPdfId","ActionGroup","type","isDisabled","linkAccounts","href","component","style","paddingTop","setMergedResponse","setState","setRedirect","setSubmitting","setFetchingResponse","fetchMergedResponse","async","signal","insights","chrome","auth","getToken","then","token","axios","headers","Authorization","withCredentials","getPartnerOrderDetailsAsync","res","JSON","stringify","data","successful","initializeMergedResponse","errorCallback","response","catch","finally","linkedRedHatAccountId","getUser","user","identity","org_id","sendToLandingPage","errorPaths","componentDidMount","componentWillUnmount","abort","params","linkAllOrders","linkSuccessful","linkPartnerOrderToAccountAsync","onLinkSuccess","err","success","useToast","message","landingPage","location","assign","reason","status","Card","headerKey","CardTitle","bodyKey","CardBody","footerKey","CardFooter","t","i18nKey","target","StratosphereApp","static","match","getPartnerId","localWithPartner","options","ns","Switch","Route","exact","path","ToastNotification","notifObject","setNotification","val","notifications","concat","setTimeout","notification_obj","filter","item","componentDidUpdate","prevProps","toastData","lastData","length","FooterComponent","Split","SplitItem","Brand","src","imgBrand","alt","dangerouslySetInnerHTML","__html","App","newToast","userDetails","toast","setUserDetails","init","identifyApp","history","pushState","onpopstate","go","unregister","on","event","push","navId","i18n","getErrorPaths","AppWithTranslation","withTranslation","hrefConfig","hrefEnv","resources","en","aws","_comment","locale","body","footer","headline","customer_info","title","customer_number","customer_identifier","azure","common","header","review","link","learn","privacy","policy","landing","defaultRedHatAccountNumber","accountNumberLabel","subscriptionLabel","connectAccountButtonLabel","cancelButtonLabel","link_accounts","required_fields","checkbox_label","enterprise_agreement","download","helper_text","enterprise_agreement_default_lang","name","conditions","button","confirm","back","cancel","detector","use","LanguageDetector","initReactI18next","fallbackLng","order","languages","react","useSuspense","interpolation","escapeValue","fallbackNS","navigator","serviceWorker","ready","registration","Boolean","hostname"],"sourceRoot":""}