{"version":3,"file":"js/2493.1663178798182.3b147a4c0d1e436fc437.js","mappings":"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","sources":["webpack:///./src/app/component/bff-service/partner-link-bff-service.js","webpack:///./src/app/component/order-details/aws-details.js","webpack:///./src/app/component/order-details/azure-details.js","webpack:///./src/app/component/order-details/partner-order-details.js","webpack:///./src/app/component/stratosphere-error-paths/get-stratosphere-error-paths.js","webpack:///./src/app/component/review-link/terms-form-group.js","webpack:///./src/app/component/review-link/review-link-account.js","webpack:///./src/app/component/stratosphere-app/stratosphere-app.js","webpack:///./src/app/component/shared/toast-notifications/toast-notifications.js","webpack:///./src/app/component/shared/footer/footer.js","webpack:///./src/app/component/stratosphere-notifications/stratosphere-notification.js","webpack:///./src/app/component/stratosphere-notifications/error-notification.js","webpack:///./src/App.js","webpack:///./src/locales/partner_aws/en.js","webpack:///./src/locales/en/common.js","webpack:///./src/i18n.js","webpack:///./src/app/component/shared/constants.js","webpack:///./src/serviceWorker.js"],"sourcesContent":["import axios from 'axios';\nimport { PropTypes } from 'prop-types';\n\nexport default class PartnerLinkBffService {\n  constructor(local, useToast) {\n    this.local = local;\n    this.useToast = useToast;\n  }\n\n  getApiUrl() {\n    const { apiUrl } = window['runConfig'] || {\n      apiUrl: 'https://access.stage.redhat.com/subscriptions/link/api/',\n    };\n    return apiUrl;\n  }\n\n  async getPartnerOrderDetailsAsync(partnerId, signal, callback) {\n    return insights.chrome.auth.getToken().then((token) => {\n      return axios\n        .get(this.getApiUrl() + `${partnerId}/details`, {\n          headers: { Authorization: `Bearer ${token}` },\n          withCredentials: true, // required to supply cookies on cross-site requests\n          signal: signal,\n        })\n        .then((res) => callback(null, res.data))\n        .catch((error) => callback(error));\n    });\n  }\n\n  async linkPartnerOrderToAccountAsync(partnerId, termsPdfId, callback) {\n    console.debug(`Linking partner=${partnerId}, terms=${termsPdfId}`);\n\n    return insights.chrome.auth.getToken().then((token) => {\n      return axios\n        .post(\n          this.getApiUrl() + `${partnerId}/link`,\n          {},\n          {\n            headers: { Authorization: `Bearer ${token}` },\n            params: {\n              termsPdfId: termsPdfId,\n              linkAllOrders: true, // no longer optional\n            },\n            withCredentials: true, // required to supply cookies on cross-site requests\n          }\n        )\n        .then((res) => callback(null, res.data.linkSuccessful))\n        .catch((error) => callback(error));\n    });\n  }\n}\n\nPartnerLinkBffService.propTypes = {\n  local: PropTypes.func.isRequired,\n  useToast: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nfunction AwsDetails(orderDetails, local) {\n  return {\n    getRows() {\n      return [\n        {\n          label: local('review-order.customer_info.customer_number'),\n          value: orderDetails?.customerAccountId ?? '-',\n        },\n      ];\n    },\n  };\n}\n\nAwsDetails.propTypes = {\n  orderDetails: PropTypes.object.isRequired,\n  local: PropTypes.func.isRequired,\n};\n\nexport default AwsDetails;\n","import PropTypes from 'prop-types';\n\nfunction AzureDetails(orderDetails, local) {\n  return {\n    getRows() {\n      return [\n        {\n          label: local('review-order.customer_info.customer_number'),\n          value: orderDetails?.tenantId ?? '-',\n        },\n      ];\n    },\n  };\n}\n\nAzureDetails.propTypes = {\n  orderDetails: PropTypes.object.isRequired,\n  local: PropTypes.func.isRequired,\n};\n\nexport default AzureDetails;\n","import PropTypes from 'prop-types';\nimport AwsDetails from './aws-details';\nimport AzureDetails from './azure-details';\n\nfunction PartnerOrderDetails(partnerId, orderDetails, local) {\n  switch (partnerId) {\n    case 'aws':\n      return new AwsDetails(orderDetails, local);\n    case 'azure':\n      return new AzureDetails(orderDetails, local);\n    default:\n      throw new Error(`Unknown partner: ${partnerId}`);\n  }\n}\n\nPartnerOrderDetails.propTypes = {\n  partnerId: PropTypes.string.isRequired,\n  orderDetails: PropTypes.object,\n  local: PropTypes.func.isRequired,\n};\n\nexport default PartnerOrderDetails;\n","export default function getStratosphereErrorPaths(partnerId) {\n  return {\n    error: () => `/${partnerId}/error`,\n    orderError: () => `/${partnerId}/order-error`,\n    exportError: () => `/${partnerId}/export-error`,\n    systemError: () => `/${partnerId}/system-error`,\n    alreadyLinked: () => `/${partnerId}/already-linked`,\n    unauthorized: () => '/unauthorized',\n    needAssistance: () => `/${partnerId}/need-assistance`,\n  };\n}\n","import { Button, Checkbox, FormGroup, FormSelect, FormSelectOption, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport langList from '../../../locales/language.json';\n\nfunction TermsFormGroup(props) {\n  const { local, onAgreeToTerms, onSelectTermsId, terms } = props;\n  const downloadURLs = terms[0]?.translations;\n\n  const [selectedLanguage, setSelectedLanguage] = useState(getDefaultLanguage());\n  const [selectedTerms, setSelectedTerms] = useState(getDefaultTerms(terms));\n  const [isAgreedToTerms, setIsAgreedToTerms] = useState(false);\n\n  const findTermsForLanguage = (languageCode) => {\n    return downloadURLs.find((downloadURL) => downloadURL.localeCode === languageCode);\n  };\n  const handleSelectLanguage = (languageCode) => {\n    let matchingLanguage = langList.find((lang) => lang.code === languageCode);\n    setSelectedLanguage(matchingLanguage);\n\n    let matchingTerms = findTermsForLanguage(languageCode);\n    setSelectedTerms(matchingTerms);\n    onSelectTermsId(matchingTerms.id);\n  };\n  const handleAgreeCheckbox = (checked) => {\n    setIsAgreedToTerms(checked);\n    onAgreeToTerms(checked);\n  };\n  const downloadTerms = () => {\n    window.open(selectedTerms.downloadUrl, '_blank');\n  };\n\n  return (\n    <>\n      <FormGroup label=\"Terms and conditions *\">\n        <FormSelect value={selectedLanguage.code} onChange={handleSelectLanguage} aria-label=\"FormSelect Input\">\n          {langList.map((lang, index) => (\n            <FormSelectOption key={index} value={lang.code} label={lang.nativeName} />\n          ))}\n        </FormSelect>\n        <Checkbox\n          id=\"agree-check\"\n          isChecked={isAgreedToTerms}\n          className=\"pf-u-mt-md\"\n          label={\n            <>\n              {local('link-account.terms')}\n              <Button variant=\"link\" isInline onClick={downloadTerms}>\n                {local('link-account.enterprise_agreement.download') + ` - ${selectedLanguage.nativeName}`}\n                &nbsp;\n                <ExternalLinkAltIcon />\n              </Button>\n            </>\n          }\n          onChange={handleAgreeCheckbox}\n          aria-label=\"terms checkbox\"\n        />\n      </FormGroup>\n    </>\n  );\n}\n\nfunction getDefaultLanguage() {\n  return langList.find((lang) => lang.code === 'en_US') || langList?.[0] || null;\n}\n\nfunction getDefaultTerms(terms) {\n  let defaultLanguage = getDefaultLanguage();\n  let translations = terms?.[0]?.translations;\n  return translations?.find((translation) => translation.localeCode === defaultLanguage.code);\n}\n\nTermsFormGroup.propTypes = {\n  local: PropTypes.func.isRequired,\n  onAgreeToTerms: PropTypes.func.isRequired,\n  onSelectTermsId: PropTypes.func.isRequired,\n  terms: PropTypes.array.isRequired,\n};\n\nexport { TermsFormGroup, getDefaultTerms };\n","import { ActionGroup, Button, DescriptionList, DescriptionListDescription, DescriptionListGroup, DescriptionListTerm, Form, Page, PageSection, Spinner, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport { PropTypes } from 'prop-types';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PartnerLinkBffService from '../bff-service/partner-link-bff-service';\nimport PartnerOrderDetails from '../order-details/partner-order-details';\nimport getStratosphereErrorPaths from '../stratosphere-error-paths/get-stratosphere-error-paths';\nimport { getDefaultTerms, TermsFormGroup } from './terms-form-group';\n\nclass ReviewLinkAccount extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      mergedResponse: null,\n      redirect: null,\n      // form contents\n      isAgree: false,\n      termsPdfId: null,\n      // concurrent request control\n      submitting: false,\n      fetchingResponse: false,\n    };\n\n    this.abortController = new AbortController();\n  }\n\n  render() {\n    const { redirect, mergedResponse } = this.state;\n\n    if (redirect) {\n      return <Redirect to={redirect} />;\n    }\n    if (!mergedResponse) {\n      return <Spinner size=\"xl\" aria-label=\"Waiting on order content to load\" />;\n    }\n\n    const { redHatAccountDetails, marketplaceDetails, vendorOfferings, terms } = mergedResponse;\n    const { partnerId, local } = this.props;\n    const { isAgree, submitting } = this.state;\n\n    return (\n      <>\n        <PageSection isFilled={true} variant='light' className='pf-u-p-2xl'>\n          {/* TODO update to use localization */}\n          <Title headingLevel='h1' className='pf-u-pb-xl'>Complete your account connection</Title>\n          <DescriptionList isHorizontal horizontalTermWidthModifier={{\n            default: '12ch',\n            sm: '17ch',\n            md: '17ch',\n            lg: '17ch',\n            xl: '17ch',\n            '2xl': '17ch'\n          }} className='pf-u-pb-2xl'>\n            <DescriptionListGroup>\n              <DescriptionListTerm>Red Hat Account Number</DescriptionListTerm>\n              <DescriptionListDescription>{redHatAccountDetails.accountNumber}</DescriptionListDescription>\n            </DescriptionListGroup>\n              {new PartnerOrderDetails(partnerId, marketplaceDetails, local).getRows().map((row, i) => (\n                <DescriptionListGroup key={i}>\n                  <DescriptionListTerm>{row.label}</DescriptionListTerm>\n                  <DescriptionListDescription>{row.value}</DescriptionListDescription>\n                </DescriptionListGroup>\n              ))}\n            <DescriptionListGroup>\n              <DescriptionListTerm>Products</DescriptionListTerm>\n              <DescriptionListDescription>{vendorOfferings?.[0]?.description}</DescriptionListDescription>\n            </DescriptionListGroup>\n          </DescriptionList>\n          <Form>\n            {/* Embedded component for handling terms */}\n            <TermsFormGroup\n              local={local}\n              terms={terms}\n              onAgreeToTerms={(agree) => this.setIsAgree(agree)}\n              onSelectTermsId={(id) => this.setTermsPdfId(id)}\n            />\n            <ActionGroup>\n              <Button variant=\"primary\" type=\"button\" isDisabled={!isAgree || submitting} onClick={() => this.linkAccounts()}>\n                Connect Accounts\n              </Button>\n              <Button variant=\"link\" href='/' component='a' style={{paddingTop: \"6px\"}}>Cancel</Button>\n            </ActionGroup>\n          </Form>\n        </PageSection>\n      </>\n    );\n  }\n\n  setMergedResponse(mergedResponse) {\n    this.setState({ mergedResponse: mergedResponse });\n  }\n  setRedirect(redirect) {\n    this.setState({ redirect: redirect });\n  }\n  setIsAgree(isAgree) {\n    this.setState({ isAgree: isAgree });\n  }\n  setTermsPdfId(termsPdfId) {\n    this.setState({ termsPdfId: termsPdfId });\n  }\n  setSubmitting(submitting) {\n    this.setState({ submitting: submitting });\n  }\n  setFetchingResponse(fetchingResponse) {\n    this.setState({ fetchingResponse: fetchingResponse });\n  }\n\n  bffClient() {\n    const { local, useToast } = this.props;\n    return new PartnerLinkBffService(local, useToast);\n  }\n\n  fetchMergedResponse() {\n    if (this.state.mergedResponse === null && !this.state.fetchingResponse) {\n      this.setFetchingResponse(true);\n      this.bffClient().getPartnerOrderDetailsAsync(this.props.partnerId, this.abortController.signal, (err, data) => {\n        this.setFetchingResponse(false);\n        if (err) {\n          this.errorCallback(err);\n        } else {\n          this.initializeMergedResponse(data);\n        }\n      });\n    }\n  }\n\n  initializeMergedResponse(data) {\n    if (data.linkedRedHatAccountId) {\n      this.setRedirect(this.errorPaths().alreadyLinked());\n    }\n\n    this.setMergedResponse(data);\n    this.setTermsPdfId(getDefaultTerms(data.terms).id);\n  }\n\n  componentDidMount() {\n    // start fetching when rendered\n    console.debug('Starting to fetch order details');\n    this.fetchMergedResponse();\n  }\n\n  componentWillUnmount() {\n    console.debug('Cancelling ongoing requests...');\n    this.abortController.abort();\n  }\n\n  linkAccounts() {\n    if (!this.state.submitting) {\n      const { partnerId } = this.props;\n      const { termsPdfId } = this.state;\n\n      this.setSubmitting(true);\n\n      this.bffClient().linkPartnerOrderToAccountAsync(partnerId, termsPdfId, (err, data) => {\n        this.setSubmitting(false);\n        if (err) {\n          this.errorCallback(err);\n        } else {\n          this.onLinkSuccess(data);\n        }\n      });\n    }\n  }\n\n  onLinkSuccess(success) {\n    if (success) {\n      // show success then redirect\n      this.props.useToast({\n        key: 'confirm-link',\n        message: this.props.local(`${this.props.partnerId}:toast-notification.confirm-link.success`),\n        type: 'success',\n      });\n\n      let vendorOfferings = this.state?.mergedResponse?.vendorOfferings;\n      let landingPage = vendorOfferings?.[0]?.landingPage || window['runConfig']['hrefConfig'];\n\n      console.debug('Sending to ' + landingPage);\n      window.location.assign(landingPage);\n    } else {\n      this.setRedirect(this.errorPaths().error());\n    }\n  }\n\n  errorPaths() {\n    return getStratosphereErrorPaths(this.props.partnerId);\n  }\n\n  errorCallback(error) {\n    const errorPaths = this.errorPaths();\n    console.debug('Encountered error on call: ' + JSON.stringify(error));\n\n    if (error.reason === 'AbortError' || error.message === 'canceled') {\n      // do not redirect if aborted\n      return;\n    }\n\n    if (error?.response?.status === 401) {\n      this.setRedirect(errorPaths.unauthorized());\n    }\n\n    switch (error?.response?.data?.reason) {\n      case 'terms_error':\n        this.setRedirect(errorPaths.error());\n        break;\n      case 'export_compliance_failure':\n        this.setRedirect(errorPaths.exportError());\n        break;\n      case 'linked_different_account': // fall-through\n      case 'linked_same_account':\n        this.setRedirect(errorPaths.orderError());\n        break;\n      default:\n        this.setRedirect(errorPaths.systemError());\n    }\n  }\n}\n\nReviewLinkAccount.propTypes = {\n  partnerId: PropTypes.string.isRequired,\n  local: PropTypes.func.isRequired,\n  useToast: PropTypes.func.isRequired,\n};\n\nexport default ReviewLinkAccount;\n","import { PropTypes } from 'prop-types';\nimport React from 'react';\nimport ReviewLinkAccount from '../review-link/review-link-account';\n\nclass StratosphereApp extends React.Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    useToast: PropTypes.func.isRequired,\n    local: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  getPartnerId() {\n    return this.props.match.params.partnerId;\n  }\n\n  render() {\n    const partnerId = this.getPartnerId();\n    const { local, useToast } = this.props;\n\n    return <ReviewLinkAccount partnerId={partnerId} local={local} useToast={useToast} />;\n  }\n}\n\nexport default StratosphereApp;\n","import React from \"react\";\nimport \"./toast-notifications.scss\";\n\nclass ToastNotification extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      notifObject: [],\n    };\n  }\n  setNotification(val) {\n    this.state.notifObject.push({\n      key: val.key,\n      message: val.message,\n      type: val.type,\n    });\n    setTimeout(() => {\n      if (this.state.notifObject) {\n        let notification_obj = this.state.notifObject.filter(\n          (item) => item.key !== val.key\n        );\n        this.setState({ notifObject: notification_obj });\n      }\n    }, 5000);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let data = nextProps.toastData;\n    if (data.key) this.setNotification(data);\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.notifObject.length > 0 && (\n          <ul className=\"pf-c-alert-group pf-m-toast\">\n            {this.state.notifObject.map((t) => (\n              <li className=\"pf-c-alert-group__item\" key={\"toast-\" + t.key}>\n                <div className={\"pf-c-alert pf-m-\" + t.type}>\n                  <div className=\"pf-c-alert__icon\">\n                    {t.type === \"success\" && (\n                      <i className=\"fas fa-check-circle\" aria-hidden=\"true\"></i>\n                    )}\n                    {t.type === \"danger\" && (\n                      <i className=\"fas fa-info-circle\" aria-hidden=\"true\"></i>\n                    )}\n                    {t.type === \"info\" && (\n                      <i className=\"fas fa-info-circle\" aria-hidden=\"true\"></i>\n                    )}\n                  </div>\n                  <h4 className=\"pf-c-alert__title\">\n                    <div className=\"pf-c-alert__description\">\n                      <p>{t.message}</p>\n                    </div>\n                  </h4>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ToastNotification;\n","import React from 'react';\nimport './footer.scss';\nimport { Brand, Split, SplitItem, PageSection } from '@patternfly/react-core';\nimport imgBrand from '../../../../assets/red_hat_logo.svg';\n\nclass FooterComponent extends React.Component {\n  render() {\n    const { local } = this.props;\n    return (\n      <PageSection className=\"footer-container pf-m-limit-width\">\n        <Split className=\"footer-body\">\n          <SplitItem className=\"footer-content\">\n            <Brand src={imgBrand} className=\"footer-logo\" alt=\"Patternfly Logo\" />\n          </SplitItem>\n          <SplitItem isFilled className=\"footer-content\">\n            Copyright &copy; 2022 Red Hat, Inc.\n          </SplitItem>\n          <SplitItem className=\"footer-content policy-content\">\n            <span\n              className=\"custom-links\"\n              dangerouslySetInnerHTML={{\n                __html: local(`app-layout.privacy`),\n              }}\n            ></span>\n            |&nbsp;\n            <span\n              className=\"custom-links\"\n              dangerouslySetInnerHTML={{\n                __html: local(`app-layout.terms`),\n              }}\n            ></span>\n            |&nbsp;\n            <span\n              className=\"custom-links\"\n              dangerouslySetInnerHTML={{\n                __html: local(`app-layout.policy`),\n              }}\n            ></span>\n          </SplitItem>\n        </Split>\n      </PageSection>\n    );\n  }\n}\n\nexport default FooterComponent;\n","import React from 'react';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport { Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';\nimport 'react-responsive-modal/styles.css';\nimport './stratosphere-notifications.scss';\nimport { Trans } from 'react-i18next';\n\nfunction StratosphereNotification(props) {\n  const { local } = props;\n\n  return (\n    <>\n      <Card id=\"notification-card\">\n        {/* https://reactjs.org/docs/conditional-rendering.html#inline-if-with-logical--operator */}\n        {props.headerKey && <CardTitle>{local(props.headerKey)}</CardTitle>}\n        {props.bodyKey && <CardBody>{local(props.bodyKey)}</CardBody>}\n        {props.footerKey && (\n          <CardFooter>\n            {/* See https://react.i18next.com/latest/trans-component */}\n            {/* <1> in locale file: support link, must supply a href attribute */}\n            <Trans i18nKey={props.footerKey}>\n              Please return to your <a target=\"blank\">marketplace console</a>\n            </Trans>\n          </CardFooter>\n        )}\n      </Card>\n    </>\n  );\n}\n\nexport default StratosphereNotification;\n","import React from 'react';\n\nimport '@patternfly/react-core/dist/styles/base.css';\nimport 'react-responsive-modal/styles.css';\nimport './stratosphere-notifications.scss';\nimport StratosphereNotification from './stratosphere-notification';\n\nfunction ErrorNotification(props) {\n  return (\n    <StratosphereNotification\n      headerKey={`${props.type}.header`}\n      bodyKey={`${props.type}.body`}\n      footerKey={`${props.type}.footer`}\n      {...props} // to inject dependencies\n    />\n  );\n}\n\nexport default ErrorNotification;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\n\nimport StratosphereApp from '../src/app/component/stratosphere-app/stratosphere-app';\nimport ToastNotification from './app/component/shared/toast-notifications/toast-notifications';\nimport getStratosphereErrorPaths from './app/component/stratosphere-error-paths/get-stratosphere-error-paths';\nimport Footer from './app/component/shared/footer/footer';\n\nimport '@patternfly/react-core/dist/styles/base.css';\nimport '@patternfly/patternfly/patternfly.css';\nimport './App.scss';\nimport ErrorNotification from './app/component/stratosphere-notifications/error-notification';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); //this.props.t are default props provide by package i18n\n    this.state = {\n      newToast: {},\n      userDetails: {},\n    };\n    this.toast = (data) => {\n      this.setState({ newToast: data });\n    };\n    this.setUserDetails = (data) => {\n      this.setState({ userDetails: data });\n    };\n  }\n\n  componentDidMount() {\n    insights.chrome.init();\n    insights.chrome.identifyApp('connect');\n\n    window.history.pushState(null, null, window.location.href);\n    window.onpopstate = function () {\n      window.history.go(1);\n    };\n  }\n\n  componentWillUnmount() {\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) => history.push(`/${event.navId}`));\n    return () => {\n      unregister();\n    };\n  }\n\n  render() {\n    // react-router-dom URL params: https://v5.reactrouter.com/web/example/url-params\n    let stratosphereRouterErrorPaths = getStratosphereErrorPaths(':partnerId');\n    return (\n      <React.Fragment>\n        <ToastNotification toastData={this.state.newToast} />\n        <Switch>\n          <Route exact path=\"/\">\n            <ErrorNotification local={this.props.t} type=\"default-error\" />\n          </Route>\n          <Route\n            exact\n            path=\"/:partnerId\"\n            render={(props) => (\n              <StratosphereApp\n                local={this.props.t}\n                i18n={this.props.i18n}\n                useToast={this.toast}\n                setUserDetails={this.setUserDetails}\n                getErrorPaths={getStratosphereErrorPaths}\n                {...props}\n              />\n            )}\n          ></Route>\n          <Route path={stratosphereRouterErrorPaths.alreadyLinked()}>\n            <ErrorNotification local={this.props.t} type=\"already-linked\" />\n          </Route>\n          <Route\n            path={[\n              stratosphereRouterErrorPaths.error(),\n              stratosphereRouterErrorPaths.orderError(),\n              stratosphereRouterErrorPaths.exportError(),\n              stratosphereRouterErrorPaths.systemError(),\n            ]}\n          >\n            <ErrorNotification local={this.props.t} type=\"general-error\" />\n          </Route>\n          <Route path={stratosphereRouterErrorPaths.needAssistance()}>\n            <ErrorNotification local={this.props.t} type=\"need-assistance\" />\n          </Route>\n          {/* //Added to handle url manipulations and redirect to Default error page is defined router is not found. */}\n          {/* <Route path=\"*\">\n              <ErrorNotification local={this.props.t} type=\"default-error\" />\n            </Route> */}\n        </Switch>\n        <Footer local={this.props.t}/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withTranslation('aws')(App);\n","const { hrefConfig, hrefEnv } = window[\"runConfig\"] || {\n  hrefConfig: \"https://access.redhat.com/\",\n  hrefEnv: \"\",\n};\nexport default {\n  _comment: \"English\",\n  locale: \"en_us\",\n  \"system-error\": {\n    header: \"A system error has occurred\",\n    body:\n      \"Please go back and try again.\",\n    footer: \"Go Back\",\n  },\n  \"general-error\": {\n    header: \"An issue has occurred\",\n    body:\n      \"An issue has occurred with your AWS order.\",\n    footer: \"If the issue persists, please contact <1 href=\\\"https://access.redhat.com/\\\">Red Hat customer support</1>.\",\n  },\n  \"already-linked\": {\n    header: \"Already linked\",\n    body:\n      \"Your AWS order has already been linked.\",\n    footer: \"Please return to the <1 href=\\\"https://console.aws.amazon.com\\\">AWS console</1> to get started!\",\n  },\n  logout: {\n    header: \"Logout successful\",\n    body:\n      \"Logged out successfully.\",\n  },\n  \"reset-password\": {\n    header: \"Reset password\",\n    \"a-body\": `To reset your password, visit the <a href='https://sso.${hrefEnv}redhat.com/auth/realms/redhat-external/protocol/openid-connect/forgot-credentials?client_id=partner-link&redirect_uri=${hrefConfig}subscriptions/link/reset-password-complete&response_type=code&scope=openid' target='_blank'>reset password</a> page.`,\n    \"b-body\":\n      \"After resetting your password, return to AWS Marketplace and restart process.\",\n    footer: \"Reset your password\",\n  },\n  \"reset-password-complete\": {\n    header: \"Reset password complete\",\n    body: \"Return to AWS Marketplace and restart the linking process.\",\n  },\n  \"token-error\": {\n    header: \"An error has occurred\",\n    \"a-body\":\n      \"Please return to AWS Marketplace and restart the linking process.\",\n    \"b-body\":\n      \"If the issue persists, please contact Red Hat Customer Support.\",\n    footer: \"Contact Red Hat Customer Support\",\n  },\n  'landing-page':{\n    header:\"Welcome to the Red Hat gateway for cloud marketplaces\",\n    body:\"Linking your AWS account to a Red Hat account gives you access to everything needed to keep your systems running and solve problems quickly. This access includes resources like Red Hat's community of experts, knowledge resources, security updates, and support tools that you can't get anywhere else.\",\n    prompt:\"To get started, log in to your Red Hat account or create a new one.\",\n    button:\"Log in to Red Hat\",\n    registerlink:\"Create a new account\"\n  },\n  \"unauthorized\": {\n    header: \"Your Red Hat session has expired\",\n    body:\n      \"Please return to AWS Marketplace and restart the linking process.\",\n  },\n  \"app-layout\": {\n    review: \"Review order summary\",\n    link: \"Link your Red Hat Account\",\n    learn: \"Learn More\",\n    privacy:\n      \"<a href='https://www.redhat.com/en/about/privacy-policy' target='blank'>Privacy statement </a>\",\n    terms:\n      \"<a href='https://www.redhat.com/en/about/terms-use' target='blank'>Terms of use </a>\",\n    policy:\n      \"<a href='https://www.redhat.com/en/about/all-policies-guidelines' target='blank'>All policies and guidelines </a>\",\n    landing: \"Welcome to Red Hat Partner Link Portal\",\n  },\n  \"need-assistance\": {\n    header: \"Need assistance?\",\n    body: \"For inquiries related to your account linking, contact Red Hat Customer Support.\",\n    footer: \"<1 href=\\\"https://access.redhat.com\\\">Red Hat Customer Support</1>\",\n  },\n  \"learn-more\": {\n    header: \"Learn more\",\n    description: `You're all set. You can now access your Red Hat subscriptions from your AWS order in your linked Red Hat account.`,\n  },\n  \"review-order\": {\n    header: \"Access subscription benefits for your Red Hat Openshift Service\",\n    headline: \"Link your AWS and Red Hat Accounts\",\n    description:\n      \"Get support from Red Hat... Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam..\",\n    customer_info: {\n      title: \"AWS Customer information\",\n      customer_number: \"Account Id\",\n      product: \"Product\",\n      customer_identifier: \"Customer Identifier\",\n    },\n    footer: \"If this is the correct customer account, click Next to continue.\",\n    button: {\n      next: \"Next\",\n      cancel: \"Cancel\",\n    },\n  },\n  \"link-account\": {\n    header: \"Link your Red Hat account\",\n    description:\n      \"Review your Red Hat account details below. If the information is not correct and you need help, contact Red Hat Customer Support.\",\n    account_detail: {\n      title: \"Account details\",\n      red_hat_login: \"Red Hat login:\",\n      email_address: \"Email address:\",\n      red_hat_account_number: \"Red Hat Account Number:\",\n      company: \"Company:\",\n      titles: \"Title:\",\n      first_name: \"First Name:\",\n      last_name: \"Last Name:\",\n      region: \"Country or Region:\",\n      address: \"Address 1:\",\n      postal_code: \"Postal Code:\",\n      city: \"City:\",\n      county: \"County:\",\n      state: \"State:\",\n      phone_number: \"Phone number:\",\n    },\n    link_accounts: {\n      title: \"Auto-link opt-in\",\n      required_fields: \"*Required fields\",\n      checkbox_label:\n        \"Automatically link your future purchases of Red Hat products from AWS to your Red Hat Account.\",\n    },\n    enterprise_agreement: {\n      title: \"Enterprise agreement\",\n      description:\n        \"To read the Red Hat Enterprise Agreement document (PDF), select your preferred language and location from the dropdown menu.\",\n      download: \"Download\",\n      helper_text: \"Change agreement's location and language\",\n    },\n    enterprise_agreement_default_lang: {\n      name: \"United States (English)\",\n    },\n    terms: \"I have read and agree to the terms. \",\n    button: {\n      confirm: \"Confirm\",\n      back: \"Back\",\n      cancel: \"Cancel\",\n    },\n  },\n  \"toast-notification\": {\n    \"confirm-link\": {\n      \"success\":\n        \"Success! Your Red Hat account is now linked with your AWS Order.\",\n    },\n  },\n};\n","const { hrefConfig, hrefEnv } = window[\"runConfig\"] || {\n  hrefConfig: \"https://access.redhat.com/\",\n  hrefEnv: \"\",\n};\nexport default {\n  _comment: \"English\",\n  locale: \"en_us\",\n  \"system-error\": {\n    header: \"A system error has occurred\",\n    body:\n      \"Please go back and try again.\",\n    footer: \"Go Back\",\n  },\n  \"default-error\": {\n      header: \"An issue has occurred.\",\n      body:\n        \"Please go back and try again.\",\n      footer: \"Please restart the linking process.\",\n    },\n  \"already-linked\": {\n    header: \"Already linked\",\n    body:\n      \"Your order has already been linked.\",\n    footer: \"Go Back\",\n  },\n  logout: {\n    header: \"Logout successful\",\n    body:\n      \"Logged out successfully.\",\n  },\n  \"reset-password\": {\n    header: \"Reset password\",\n    \"a-body\": `To reset your password, visit the <a href='https://sso.${hrefEnv}redhat.com/auth/realms/redhat-external/protocol/openid-connect/forgot-credentials?client_id=partner-link&redirect_uri=${hrefConfig}subscriptions/link/reset-password-complete&response_type=code&scope=openid' target='_blank'>reset password</a> page.`,\n    \"b-body\":\n      \"After resetting your password, return to Marketplace and restart process.\",\n    footer: \"Reset your password\",\n  },\n  \"reset-password-complete\": {\n    header: \"Reset password complete\",\n    body: \"Return to Marketplace and restart the linking process.\",\n  },\n  \"token-error\": {\n    header: \"An error has occurred\",\n    \"a-body\":\n      \"Please return to Marketplace and restart the linking process.\",\n    \"b-body\":\n      \"If the issue persists, please contact Red Hat Customer Support.\",\n    footer: \"Contact Red Hat Customer Support\",\n  },\n  \"unauthorized\": {\n    header: \"Your Red Hat session has expired\",\n    body:\n      \"Please return to Marketplace and restart the linking process.\",\n  },\n  \"app-layout\": {\n    review: \"Review order summary\",\n    link: \"Link your Red Hat Account\",\n    learn: \"Learn More\",\n    privacy:\n      \"<a href='https://www.redhat.com/en/about/privacy-policy' target='blank'>Privacy statement </a>\",\n    terms:\n      \"<a href='https://www.redhat.com/en/about/terms-use' target='blank'>Terms of use </a>\",\n    policy:\n      \"<a href='https://www.redhat.com/en/about/all-policies-guidelines' target='blank'>All policies and guidelines </a>\",\n    landing: \"Welcome to Red Hat Partner Link Portal\",\n  },\n  \"need-assistance\": {\n    header: \"Need assistance?\",\n    \"a-body\":\n      \"For inquiries related to your account linking, contact RedHat Customer Support.\",\n    \"b-body\": `Check out this <a href='${hrefConfig}articles/5024951' target='blank'>FAQ</a> article in the Red Hat Customer Portal for more information about how Red Hat supports Cloud Account Linking`,\n    footer: \"Contact RedHat Support\",\n  },\n  \"learn-more\": {\n    header: \"Learn more\",\n    description: `You're all set. You can now access your Red Hat subscriptions from your order in your linked Red Hat account.`,\n  },\n  'landing-page':{\n    header:\"Welcome to the Red Hat gateway for cloud partners\",\n    body:\"we recommend that you link your Red Hat account or create a new one\",\n    prompt:\"To get started, log in or register.\",\n    button:\"Log in to Red Hat\",\n    registerlink:\"Create a new account\"\n  },\n};","import i18n from \"i18next\";\n\nimport * as partner_aws from \"./locales/partner_aws/index\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport commonTranslationEN from \"./locales/en/common.js\";\nimport constants from \"./app/component/shared/constants.js\";\n\nconst resources = {\n  \n  en: {\n    aws: partner_aws.translationAWSEN,\n    common: commonTranslationEN,\n  },\n};\ni18n\n  .use(detector)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    order: [\n      \"querystring\",\n      \"cookie\",\n      \"localStorage\",\n      \"sessionStorage\",\n      \"navigator\",\n      \"htmlTag\",\n      \"path\",\n      \"subdomain\",\n    ],\n    resources,\n    debug: false,\n    languages: [\"en\"],\n    react: {\n      useSuspense: false,\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n\n    ns: constants.namespaces,\n\n    fallbackNS: 'common'\n  });\n\nexport default i18n;\n","export default{\n    namespaces: ['aws', 'ibm-dsw','common']\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n"],"names":["PartnerLinkBffService","constructor","local","useToast","this","getApiUrl","apiUrl","window","partnerId","signal","callback","insights","chrome","auth","getToken","then","token","axios","headers","Authorization","withCredentials","res","data","catch","error","termsPdfId","console","debug","params","linkAllOrders","linkSuccessful","AwsDetails","orderDetails","getRows","label","value","customerAccountId","propTypes","PropTypes","AzureDetails","tenantId","PartnerOrderDetails","Error","getStratosphereErrorPaths","orderError","exportError","systemError","alreadyLinked","unauthorized","needAssistance","TermsFormGroup","props","onAgreeToTerms","onSelectTermsId","terms","downloadURLs","translations","selectedLanguage","setSelectedLanguage","useState","getDefaultLanguage","selectedTerms","setSelectedTerms","getDefaultTerms","isAgreedToTerms","setIsAgreedToTerms","FormGroup","FormSelect","code","onChange","languageCode","matchingLanguage","langList","lang","matchingTerms","find","downloadURL","localeCode","findTermsForLanguage","id","index","FormSelectOption","key","nativeName","Checkbox","isChecked","className","Button","variant","isInline","onClick","open","downloadUrl","checked","defaultLanguage","translation","ReviewLinkAccount","React","super","state","mergedResponse","redirect","isAgree","submitting","fetchingResponse","abortController","AbortController","render","Redirect","to","Spinner","size","redHatAccountDetails","marketplaceDetails","vendorOfferings","PageSection","isFilled","Title","headingLevel","DescriptionList","isHorizontal","horizontalTermWidthModifier","default","sm","md","lg","xl","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","accountNumber","map","row","i","description","Form","agree","setIsAgree","setTermsPdfId","ActionGroup","type","isDisabled","linkAccounts","href","component","style","paddingTop","setMergedResponse","setState","setRedirect","setSubmitting","setFetchingResponse","bffClient","fetchMergedResponse","getPartnerOrderDetailsAsync","err","errorCallback","initializeMergedResponse","linkedRedHatAccountId","errorPaths","componentDidMount","componentWillUnmount","abort","linkPartnerOrderToAccountAsync","onLinkSuccess","success","message","landingPage","location","assign","JSON","stringify","reason","response","status","StratosphereApp","match","getPartnerId","ToastNotification","notifObject","setNotification","val","push","setTimeout","notification_obj","filter","item","componentWillReceiveProps","nextProps","toastData","length","t","FooterComponent","Split","SplitItem","Brand","src","imgBrand","alt","dangerouslySetInnerHTML","__html","Card","headerKey","CardTitle","bodyKey","CardBody","footerKey","CardFooter","Trans","i18nKey","target","App","newToast","userDetails","toast","setUserDetails","init","identifyApp","history","pushState","onpopstate","go","unregister","on","event","navId","stratosphereRouterErrorPaths","Switch","Route","exact","path","i18n","getErrorPaths","withTranslation","hrefConfig","hrefEnv","_comment","locale","header","body","footer","logout","prompt","button","registerlink","review","link","learn","privacy","policy","landing","headline","customer_info","title","customer_number","product","customer_identifier","next","cancel","account_detail","red_hat_login","email_address","red_hat_account_number","company","titles","first_name","last_name","region","address","postal_code","city","county","phone_number","link_accounts","required_fields","checkbox_label","enterprise_agreement","download","helper_text","enterprise_agreement_default_lang","name","confirm","back","resources","en","aws","partner_aws","common","detector","use","LanguageDetector","initReactI18next","fallbackLng","order","languages","react","useSuspense","interpolation","escapeValue","ns","fallbackNS","navigator","serviceWorker","ready","registration","Boolean","hostname"],"sourceRoot":""}